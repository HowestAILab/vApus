<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnRefresh.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGOfPtRkwAAACBjSFJNAAB6
        JQAAgIMAAPn/AACA6QAAdTAAAOpgAAA6mAAAF2+SX8VGAAAACXBIWXMAAAsMAAALDAE/QCLIAAACXUlE
        QVQ4T2P4//8/BKNB9rzdcMyvzKOmm6ZajiwP04cwAAmDNOVtec/Arc3JycjBwKUZphjT8bXwv5AWnym6
        WhQODMt5SoR7L7TbkHEy7G7+hdj7pTcSn3d/K/0fudHzLBMLEyuyWhSNDEwMTFaN+vPKnif8b/2R87/z
        f/7/5j8Z/4tfRf9PvOHzP+Ka83/5JJFmFD3IHPNq3UlFz2P+B29xfGw7UXeXVa/WBq+NZldjb7n99zpu
        9t96v/p/rYXin5n5GSUwDBDW5zcN2+n6UcJeKIeBkUHEa/dHBsPNHxgUEkQrAm5Z/jdZrfRVKoVvKZs0
        kzVQngXDAFkf8QQuKQ4HEBsUiC67PjForf/AoNkhtV4uRWgeizCTHkwtMkYwGBgYYWyQATbbPjGor33H
        wMTNIKnXcRiuDh1jFQQZwCHDJsWvz2tReQLokqZ9KPJMfIz8MDZcEKQJhLnUOOS1ihWagg85vFQIlGos
        P/aBQbdmFxgzijKwqFSKTeXSYnXBMIBNmFVSo0iu32uXxduka97/U2/6/xcw4Q4E2ibAqcciI50oGOq4
        Tfek4VSFG0DvcmAYwKXAoRd00vZ/3EX3/7FXXP6nPgQacs/3U8JVr5exV90/x953/W+/WesXiwSjOUwP
        igEgrBQn1Rj1wP5/6mOv/5U/Y/9X/0n4X/A+7H/Edaf/BlPlb7DKMjkhqwdhVA4TA5vbBqOzVb/j/pt3
        aG4wqlFZqJ4rNVvAljMdKCeCrBauB12AX5/bMvK641cGNga5kgOvwYGHrgYZYxXkMWTzBaY2TkKa////
        zwAAOs4rvLymNikAAAAASUVORK5CYII=
</value>
  </data>
  <metadata name="clmIPorHostName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmUserName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmDomain.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmPassword.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmSlaves.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmTests.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="clmCpuCores.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="llblResultPath.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA3QAAAN0AEQbD0HAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAAAe9JREFUOE+lk11IFFEYhg+CsCAsCIYgeOt90l1EUFdhF3UTBWVZa5EU
        SVH0A0Gkw+7O7lTkhT9RhJIYpFA3IRQEIbWROrX5V2KWfVs67TBznHPcJfzab8BpZvBCaeA5HN73fc7d
        MET8L9YNN4N7pLTEk3iyXfpJphRLTcdVRVG2hCU/7pFU4zkhHFxZkR62bWEm86ag3UrnqA+TUJVu7wHt
        tjoppcB83vCwLBMdhyPlYRxnGclxH5i7XAvTV+uK8231+LVt64aYb6/H6Wt1xbkrtcBmL9YAf9ZakC9v
        oHyVQDlyB0WmB+VoH4rsEIpPT9HRH6N431vK76EY6UD5Oo328PXC7KUaYJ/PV4PZf1gsDzUjH/xH+PN3
        tCXny4VqYDPnqsDsPeDYA0fRHmj0WC2KAP6OtuTMtFYBmzpTCfkH+7jZd6gUHvT4Y34P4O9oS87U2Upg
        E6ejYHTv4cb9/WgN38TCt3dYXBhdF+poQ1tyJlqiwLInK2CxYxdf6mrAxc4G/P0ohkIfRDn5PABl1NHG
        3Zac7KkKYB9ORCCnbec/7+7GNX517kXrRQr524cudKfMvyHnYywCTD9WDgvxbfxHegcG0HbiUn+LC93D
        PTl6UzmwsSNlMN4UMfRYlG+Y5igfPx4xxhrLIPBjbB5kfwFNEvGPzTGitwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="cboRunSync.ToolTip" xml:space="preserve">
    <value>Run Synchronization exists to keep all the tests equal in duration.
That way the tested applications are never idle and results can be matched/compared.

Break on First: If a run from a test is finished the other runs will break.
Break on Last: Runs will re-run untill the longest one is finished for the first time.
                      Note that the vApus think time is included in the test duration of a run.  
</value>
  </data>
  <metadata name="folderBrowserDialog.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>107, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAAABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAACMAAADoHh4ea///
        /wD///8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAMAAACZAAAA/wAA
        AE////8A////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAEAAAArAgIC3QwM
        DOsAAAAC////AP///wD///8A////AP///wD///8A////AP///wD///8A////AAAAAAAAAAAUBgYGcQAA
        AP4LCwuQ////AP///wD///8A////AP///wD///8A////AP///wD///8A////AP///wAAAAAMCQkJOgQE
        BLIICAj/HkaQcjFz65s3be0O////AP///wD///8A////AP///wD///8A////AP///wAAAAAIAAAAJQgI
        CFsCAgLlNTU12TBy638xc+vR////AP///wD///8A////AP///wD///8A////AP///wAAAAAEAAAAGiAg
        IEAQEBCCAAAA/yEhIXtAgP8E////AP///wD///8A////AP///wAAAAAAHoThXDGH7o4jl+9aC1ihRDIy
        MjIaGhpQCAgIsisrK/wAAAAY////AP///wD///8A////AF21zA80xvLVJ8D++iqa9vkteu79GIbs+yGA
        7f4adPP+FmDq+BNFkPxQa4zgAAAAAP///wD///8A////AP///wAppMXTJ8P+90a48Tf///8ASmWSHBkZ
        GRsAAAAwIDlhYQgrY6YANXj/Annw/BOX/vkGnPmdAI/VBf///wD///8ADJG+vj/C/vP///8AaGhoD1GF
        51xRc6tSLi4uMgAAAEoGCxS9Kisr9AAzVBAFlfiFEK396Am4/vQAu/JG////AAC0/wEPnuzKEZf2jy09
        VR81dObKUIPkgoSEhFR7e3tVHx8f+ERERLH///8A////AP///wAexPmLGNT+9wDT7y////8A////AAOJ
        +IYCbd+KC0qkZoSGiDSzs7NGd3d3udXV1f9eXl5q////AP///wD///8AAAAAACHd++kQ5fl+////AP//
        /wAxdOtYAAAAAQBFslMAO6KGHk6Semxtb+jKysr8VVVVAwCO2hkAp+oyAJ/LUQDO9bYj6f/2F+XvMf//
        /wD///8AK3HxEv///wD///8AFRUVEAgVKjIBBAbvDg4OjABsswc5xP7kHsn/8ArS/uUC3fyqJuTxN///
        /wD///8A////AP///wD///8A////AP///wD///8AQ0NDOSoqKhX///8AiM3qFkPL6R4AAAAA////AP//
        /wD///8A//cAAP/nAAD/5wAA/+cAAP/LAAD/ywAA/58AAPefAACAHwAAPwcAAD8jAACTOQAAzn0AAPp5
        AAD+QwAA//8AAA==
</value>
  </data>
</root>